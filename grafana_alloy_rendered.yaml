---
# Source: alloy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-alloy
  labels:
    helm.sh/chart: alloy-0.3.2
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: my-release
    
    app.kubernetes.io/version: "v1.1.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
    app.kubernetes.io/component: config
data:
  config.alloy: |-
    logging {
      level  = "info"
      format = "logfmt"
    }

    pyroscope.write "pyroscope_write" {
      endpoint {
        url = "http://pyroscope-dev.uniping.svc.cluster.local:4040"
      }
    }

    pyroscope.scrape "profile_go_app" {
      targets = [
          {"__address__" = "maestro-yaml-worker.maestro-des.svc.cluster.local:9089", "service_name"="profile-yaml-worker"},
        ]
      forward_to = [pyroscope.write.pyroscope_write.receiver]

      profiling_config {
        profile.memory {
          enabled = true
          path = "/debug/pprof/heap"
        }

        profile.process_cpu {
          enabled = true
          path = "/debug/pprof/profile"
        }

        profile.goroutine {
          enabled = true
          path = "/debug/pprof/goroutine"
        }

        profile.block {
          enabled = false
        }

        profile.mutex {
          enabled = false
        }

        profile.fgprof {
          enabled = false
        }
      }
    }
# ---
# Source: alloy/templates/rbac.yaml
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: my-release-alloy
#   labels:
#     helm.sh/chart: alloy-0.3.2
#     app.kubernetes.io/name: alloy
#     app.kubernetes.io/instance: my-release
    
#     app.kubernetes.io/version: "v1.1.1"
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/part-of: alloy
#     app.kubernetes.io/component: rbac
# rules:
#   # Rules which allow discovery.kubernetes to function.
#   - apiGroups:
#       - ""
#       - "discovery.k8s.io"
#       - "networking.k8s.io"
#     resources:
#       - endpoints
#       - endpointslices
#       - ingresses
#       - nodes
#       - nodes/proxy
#       - nodes/metrics
#       - pods
#       - services
#     verbs:
#       - get
#       - list
#       - watch
#   # Rules which allow loki.source.kubernetes and loki.source.podlogs to work.
#   - apiGroups:
#       - ""
#     resources:
#       - pods
#       - pods/log
#       - namespaces
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#       - "monitoring.grafana.com"
#     resources:
#       - podlogs
#     verbs:
#       - get
#       - list
#       - watch
#   # Rules which allow mimir.rules.kubernetes to work.
#   - apiGroups: ["monitoring.coreos.com"]
#     resources:
#       - prometheusrules
#     verbs:
#       - get
#       - list
#       - watch
#   - nonResourceURLs:
#       - /metrics
#     verbs:
#       - get
#   # Rules for prometheus.kubernetes.*
#   - apiGroups: ["monitoring.coreos.com"]
#     resources:
#       - podmonitors
#       - servicemonitors
#       - probes
#     verbs:
#       - get
#       - list
#       - watch
#   # Rules which allow eventhandler to work.
#   - apiGroups:
#       - ""
#     resources:
#       - events
#     verbs:
#       - get
#       - list
#       - watch
#   # needed for remote.kubernetes.*
#   - apiGroups: [""]
#     resources:
#       - "configmaps"
#       - "secrets"
#     verbs:
#       - get
#       - list
#       - watch
#   # needed for otelcol.processor.k8sattributes
#   - apiGroups: ["apps"]
#     resources: ["replicasets"]
#     verbs: ["get", "list", "watch"]
#   - apiGroups: ["extensions"]
#     resources: ["replicasets"]
#     verbs: ["get", "list", "watch"]
---
# Source: alloy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-alloy
  labels:
    helm.sh/chart: alloy-0.3.2
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: my-release
    
    app.kubernetes.io/version: "v1.1.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
    app.kubernetes.io/component: networking
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: my-release
  internalTrafficPolicy: Cluster
  ports:
    - name: http-metrics
      port: 12345
      targetPort: 12345
      protocol: "TCP"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-alloy
  labels:
    helm.sh/chart: alloy-0.3.2
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: my-release
    
    app.kubernetes.io/version: "v1.1.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
spec:
  replicas: 1
  podManagementPolicy: Parallel
  minReadySeconds: 10
  serviceName: my-release-alloy
  selector:
    matchLabels:
      app.kubernetes.io/name: alloy
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: alloy
      labels:
        app.kubernetes.io/name: alloy
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: ruup-operator
      containers:
        - name: alloy
          image: docker.io/grafana/alloy:v1.1.1
          imagePullPolicy: IfNotPresent
          args:
            - run
            - /etc/alloy/config.alloy
            - --storage.path=/tmp/alloy
            - --server.http.listen-addr=0.0.0.0:12345
            - --server.http.ui-path-prefix=/
            - --stability.level=public-preview
          env:
            - name: ALLOY_DEPLOY_MODE
              value: "helm"
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - containerPort: 12345
              name: http-metrics
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 12345
            initialDelaySeconds: 10
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/alloy
        - name: config-reloader
          image: docker.io/jimmidyson/configmap-reload:v0.8.0
          args:
            - --volume-dir=/etc/alloy
            - --webhook-url=http://localhost:12345/-/reload
          volumeMounts:
            - name: config
              mountPath: /etc/alloy
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
      dnsPolicy: ClusterFirst
      volumes:
        - name: config
          configMap:
            name: my-release-alloy
